---
interface Props {
  isOpen?: boolean;
}

const { isOpen = false } = Astro.props;
---

<div 
  id="auth-modal"
  class={`fixed inset-0 z-[100] bg-black bg-opacity-50 items-center justify-center ${isOpen ? 'flex' : 'hidden'}`}
>
  <div class="bg-white rounded-lg shadow-xl p-8 w-96 relative">
    <button 
      id="close-modal" 
      class="absolute top-4 right-4 text-gray-600 hover:text-gray-900"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>

    <div class="text-center mb-6">
      <h2 class="text-2xl font-bold text-gray-800">Iniciar Sesión</h2>
    </div>
    
    <form id="login-form" class="space-y-4">
      <div>
        <label for="email" class="block text-sm font-medium text-gray-700">Correo Electrónico</label>
        <input 
          type="email" 
          id="email" 
          name="email"
          required 
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
        />
      </div>
      
      <div>
        <label for="password" class="block text-sm font-medium text-gray-700">Contraseña</label>
        <input 
          type="password" 
          id="password" 
          name="password"
          required 
          class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
        />
      </div>
      
      <div class="flex items-center justify-between">
        <div class="flex items-center">
          <input 
            id="remember-me" 
            type="checkbox" 
            class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
          />
          <label for="remember-me" class="ml-2 block text-sm text-gray-900">
            Recordarme
          </label>
        </div>
        
        <div class="text-sm">
          <a href="#" class="font-medium text-blue-600 hover:text-blue-500">
            ¿Olvidaste tu contraseña?
          </a>
        </div>
      </div>
      
      <div>
        <button 
          type="submit" 
          class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          Iniciar Sesión
        </button>
      </div>
      
      <div class="mt-4 text-center">
        <p class="text-sm text-gray-600">
          ¿No tienes una cuenta? 
          <a href="#" class="font-medium text-blue-600 hover:text-blue-500">
            Regístrate
          </a>
        </p>
      </div>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const userButton = document.querySelector('[data-user-button]');
    const authModal = document.getElementById('auth-modal');
    const closeButton = document.getElementById('close-modal');

    if (userButton && authModal && closeButton) {
      userButton.addEventListener('click', () => {
        authModal.classList.remove('hidden');
        authModal.classList.add('flex');
      });

      closeButton.addEventListener('click', () => {
        authModal.classList.remove('flex');
        authModal.classList.add('hidden');
      });

      // Close modal when clicking outside
      authModal.addEventListener('click', (event) => {
        if (event.target === authModal) {
          authModal.classList.remove('flex');
          authModal.classList.add('hidden');
        }
      });
    }
  });
</script>