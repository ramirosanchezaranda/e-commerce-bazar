---
// Import components
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ProductGrid from '../components/ProductGrid.astro';
import { supabase } from '../db/supabase';

// Estado inicial
let productList = [];
let isLoading = true;
let error = null;
const itemsPerPage = 12;

try {
  // Fetch products with pagination
  const { data, error: supabaseError } = await supabase
    .from("products")
    .select('*')
    .range(0, itemsPerPage - 1);

  console.log('Fetched data:', data);
  console.log('Supabase Response:', { data, supabaseError });

  if (supabaseError) {
    console.error('Supabase Error:', supabaseError);
    console.error('Supabase Error Details:', supabaseError.details);
    throw new Error(supabaseError.message);
  }

  productList = data || [];
  isLoading = false;
} catch (e) {
  error = e instanceof Error ? e.message : 'Error al cargar los productos';
  console.error('Error fetching products:', error);
  isLoading = false;
}

// Pasar variables al cliente
const initialData = {
  itemsPerPage,
  products: productList
};
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="generator" content={Astro.generator} />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
  <title>Bazar E-commerce</title>
</head>
<body class="min-h-screen bg-gray-50">
  <Header />
  
  <main class="container mx-auto px-4 py-8">
    {isLoading && (
      <div class="flex justify-center items-center min-h-[400px]">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
      </div>
    )}
    
    {error && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
        <strong class="font-bold">Error: </strong>
        <span class="block sm:inline">{error}</span>
      </div>
    )}
    
    {!isLoading && !error && productList.length === 0 && (
      <div class="text-center py-12">
        <h2 class="text-2xl font-semibold text-gray-600">No hay productos disponibles</h2>
        <p class="text-gray-500 mt-2">Vuelve m√°s tarde para ver nuevos productos.</p>
      </div>
    )}
    
    {!isLoading && !error && productList.length > 0 && (
      <ProductGrid products={productList} />
    )}
  </main>

  <Footer />
  <script src="../scripts/products.js"></script>
</body>
</html>
