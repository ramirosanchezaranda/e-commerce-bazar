---
import { supabase } from '../db/supabase';
import Layout from '../layouts/Layout.astro';

const products: Array<{ name: string; price: number; id: number }> = [];

try {
  const { data: products, error } = await supabase.from("products").select('*');

  if (error) {
    console.error('Error fetching products:', error);
    throw error;
  }

  if (products.length === 0) {
    return <p>No products available.</p>;
  }
} catch (error) {
  console.error('Error fetching products:', error);
  return <p>Error fetching products</p>;
}

---

<Layout title="Catálogo">
  <h1>Productos</h1>
  
  <!-- Listar productos -->
  <div class="grid">
    {products.map((product: { name: unknown; price: unknown; id: unknown; }) => (
      <div class="card">
        <h3>{product.name}</h3>
        <p>Precio: ${product.price}</p>
        <button class="delete" data-id={product.id}>Eliminar</button>
      </div>
    ))}
  </div>

  <!-- Formulario para agregar -->
  <form id="addForm">
    <input type="text" name="nombre" placeholder="Nombre" required>
    <input type="number" name="precio" step="0.01" placeholder="Precio" required>
    <button type="submit">Agregar</button>
  </form>

  <script>
    // Manejar CRUD con JavaScript
    const addForm = document.getElementById('addForm');
    if (addForm) {
      addForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      
        await fetch('/api/add-producto', {
          method: 'POST',
          body: JSON.stringify(Object.fromEntries(formData))
        });
      });
      
      location.reload();
    };

    // Agregar lógica similar para delete/update
  </script>
</Layout>